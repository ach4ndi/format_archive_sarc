<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        CAAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDEIAA/sD8QGWAbABvQFoAZsBtgFoAZsBtgFoAZsBtgFoAZsBtgFoAZsBtgFo
        AZsBtgFoAZsBtgFoAZsBtgFoAZsBtgFoAZsBtgGWAbABvQPxA/tmAAP7A/kb+AP7BgAD/QP6AXcBqAHB
        AYYBzwHwAYEBywHtAYEBywHtAYEBywHtAYEBywHtAYEBywHtAYEBywHtAYYBzwHwAUsBjwGxAYYBzwHw
        AXcBqAHBAdwB4gHlA/1mAAP2AZgBsgG/AWwBngG4AWwBngG4AWwBngG4AWwBngG4AWwBngG4AWwBngG4
        AWwBngG4AWwBngG4AZgBsgG/A/UMAAGGAbUBzQGEAc4B7gF8AccB6AF8AccB6AF8AccB6AF8AccB6AF8
        AccB6AF8AccB6AGEAc4B7gFXAZsBvQGEAc4B7gH0AbYBLgGGAbUBzWwAAYABsAHJAYYBzwHwAYIBzAHt
        AYIBzAHtAYIBzAHtAYIBzAHtAYYBzwHwAVIBlgG4AYYBzwHwAYABsAHJAekB7QHvDAABkQG+AdQBhwHQ
        Ae8BfwHKAekBfwHKAekBfwHKAekBfwHKAekBfwHKAekBfwHKAekBhwHQAe8BXwGjAcUBhwHQAe8B/gHJ
        AUEBkQG+AdRsAAGPAbwB0wGGAdAB7wF+AckB6QF+AckB6QF+AckB6QF+AckB6QGGAdAB7wFfAaMBxQGG
        AdAB7wH0AbYBLgGPAbwB0wwAAZQBwAHWAYoB0wHwAYIBzQHrAYIBzQHrAYIBzQHrAYIBzQHrAYIBzQHr
        AYIBzQHrAYoB0wHwAWIBpgHIAYoB0wHwAukB2wGUAcAB1mwAAZUBwQHXAYsB0wHxAYMBzQHrAYMBzQHr
        AYMBzQHrAYMBzQHrAYsB0wHxAWMBpwHJAYsB0wHxAf4ByQFBAZUBwQHXDAABmAHDAdgBjgHWAfIBhwHQ
        Ae0BhwHQAe0BhwHQAe0BhwHQAe0BhwHQAe0BhwHQAe0BjgHWAfIBZgGqAcwBjgHWAfIC8AHmAZgBwwHY
        bAABmgHEAdkBkAHYAfMBiQHSAe4BiQHSAe4BiQHSAe4BiQHSAe4BkAHYAfMBZwGrAc0BkAHYAfMC7AHg
        AZoBxAHZDAABmwHGAdoBkgHaAfQBiwHUAfABiwHUAfABiwHUAfABiwHUAfABiwHUAfABiwHUAfABkgHa
        AfQBaQGtAc8BkgHaAfQC+AHzAZsBxgHabAABnwHIAd0BlgHdAfUBjwHXAfEBjwHXAfEBjwHXAfEBjwHX
        AfEBlgHdAfUBawGvAdEBjQHTAe0C+AH0AZ8ByAHdDAABnwHIAd0BlwHeAfYBkAHYAfIBkAHYAfIBkAHY
        AfIBkAHYAfIBkAHYAfIBkAHYAfIBlwHeAfYBeAG9AdwBeAG9AdwC/gH9AZ8ByAHdbAABowHLAd8BnAHi
        AfgBlgHdAfUBlgHdAfUBlgHdAfUBlgHdAfUBmQHgAfYBlQHaAfEBbwGzAdUBnwHKAd8BvwHZAeYMAAGi
        AcoB3gGbAeEB9wGUAdsB9AGUAdsB9AGUAdsB9AGUAdsB9AGUAdsB9AGUAdsB9AGUAdsB9AGeAeQB+AF7
        AcAB3gGiAcoB3gHuAfMB9WwAAacBzgHhAaIB5wH6AZwB4gH4AZwB4gH4AZwB4gH4AZwB4gH4AZwB4gH4
        AZ8B5AH5AZoB3wHzAacBzgHhA/4MAAGlAc0B4AGNAdEB6gGYAd8B9gGKAc4B6QGlAc0B4AGKAc4B6QGY
        Ad8B9gGKAc4B6QGlAc0B4AGKAc4B6QGhAecB+gGlAc0B4G8AAasB0AHjAaYB6wH8AaEB5gH7AaEB5gH7
        AaEB5gH7AaEB5gH7AaEB5gH7AaEB5gH7AaYB6wH8AasB0AHjEgABqAHOAeIBjQHKAeMBqAHOAeIDAAGo
        Ac4B4gGNAcoB4wGoAc4B4gMAAagBzgHiAZQB1QHsAagBzgHibwABrgHSAeUBqwHvAf4BpgHqAf0BpgHq
        Af0BpgHqAf0BpgHqAf0BpgHqAf0BpgHqAf0BqwHvAf4BrgHSAeUPAAGrAdAB4wMAAasB0AHjAwABqwHQ
        AeMDAAGrAdAB4wMAAasB0AHjAwABqwHQAeMBqwHQAeNvAAGxAdQB5gGxAfUB/wGuAfIB/wGuAfIB/wGu
        AfIB/wGuAfIB/wGuAfIB/wGuAfIB/wGxAfUB/wGxAdQB5g8AAa4B0gHkAa4B0gHkAwABrgHSAeQBkgHN
        AeYBrgHSAeQDAAGuAdIB5AGSAc0B5gGuAdIB5AMAAa4B0gHkbwAB0AHkAe4BswHWAecBswHWAecBswHW
        AecBswHWAecBswHWAecBswHWAecBswHWAecBswHWAecB0AHkAe4PAAGwAdQB5gGaAdwB8AGwAdQB5gGW
        AdcB8AGnAewB/gGWAdcB8AGwAdQB5gGWAdcB8AGnAewB/gGWAdcB8AGwAdQB5p8AAbIB1QHmAbEB9QH/
        Aa4B8gH/Aa4B8gH/Aa4B8gH/Aa4B8gH/Aa4B8gH/Aa4B8gH/Aa4B8gH/Aa4B8gH/AZwB3gHxAbIB1QHm
        nAAB0AHkAe4BswHWAecBswHWAecBswHWAecBswHWAecBswHWAecBswHWAecBswHWAecBswHWAecBswHW
        AecBswHWAecB0AHkAe5mAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wYA
        AcABAwYAAcABAwHAAQEEAAHgAQMBwAEBBAAB4AEDAcABAQQAAeABAwHAAQEEAAHgAQMBwAEBBAAB4AED
        AcABAQQAAeABAwHAAQEEAAHgAQMBwAEDBAAB4AEHAeIBIwQAAeABBwHVAVMEAAHgAQcByAGLBAAB4AEH
        AcABBwQAAv8BwAEDBAAC/wHAAQMEAAs=
</value>
  </data>
</root>